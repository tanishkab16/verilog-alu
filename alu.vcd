$date
	Wed Jul 16 11:21:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_tb $end
$var wire 1 ! Zero $end
$var wire 32 " Result [31:0] $end
$var wire 1 # Overflow $end
$var wire 1 $ Negative $end
$var wire 1 % Carry $end
$var reg 32 & A [31:0] $end
$var reg 4 ' ALUop [3:0] $end
$var reg 32 ( B [31:0] $end
$var reg 1 ) clk $end
$var reg 1 * rst $end
$scope module dut $end
$var wire 32 + A [31:0] $end
$var wire 4 , ALUop [3:0] $end
$var wire 32 - B [31:0] $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var reg 1 % Carry $end
$var reg 1 $ Negative $end
$var reg 1 # Overflow $end
$var reg 32 . Result [31:0] $end
$var reg 1 ! Zero $end
$var reg 33 / tmp_result [32:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx /
b0 .
b0 -
b0 ,
b0 +
1*
0)
b0 (
b0 '
b0 &
0%
0$
0#
b0 "
0!
$end
#5000
1)
#10000
0)
b101 (
b101 -
b1010 &
b1010 +
0*
#15000
1!
b1111 "
b1111 .
b1111 /
1)
#20000
0)
b1011001011010000010111100000000 (
b1011001011010000010111100000000 -
b1110111001101011001010000000000 &
b1110111001101011001010000000000 +
#25000
0!
1#
b11010000100111011100001100000000 "
b11010000100111011100001100000000 .
b11010000100111011100001100000000 /
1)
#30000
0)
b1 '
b1 ,
b111011100110101100101000000000 (
b111011100110101100101000000000 -
b10001000110010100110110000000000 &
b10001000110010100110110000000000 +
#35000
1$
b1001101001011111010001000000000 "
b1001101001011111010001000000000 .
b1001101001011111010001000000000 /
1)
#40000
0)
b101 (
b101 -
b10100 &
b10100 +
#45000
0$
0#
b1111 "
b1111 .
b1111 /
1)
#50000
0)
b10 '
b10 ,
b111111110000000011111111 (
b111111110000000011111111 -
b11111111000000001111111100000000 &
b11111111000000001111111100000000 +
#55000
b0 "
b0 .
1)
#60000
0)
b11 '
b11 ,
#65000
1!
b11111111111111111111111111111111 "
b11111111111111111111111111111111 .
1)
#70000
0)
b100 '
b100 ,
#75000
1$
0!
1)
#80000
0)
b101 '
b101 ,
#85000
b0 "
b0 .
1)
#90000
0)
b110 '
b110 ,
b1 (
b1 -
b11111111111111111111111111111011 &
b11111111111111111111111111111011 +
#95000
0$
1!
b1 "
b1 .
1)
#100000
0)
b11111111111111111111111111111111 (
b11111111111111111111111111111111 -
b101 &
b101 +
#105000
0!
b0 "
b0 .
1)
#110000
0)
b111 '
b111 ,
b100 (
b100 -
b1 &
b1 +
#115000
1!
b10000 "
b10000 .
1)
#120000
0)
b1000 '
b1000 ,
b11 (
b11 -
b10000000 &
b10000000 +
#125000
0!
1)
#130000
0)
